#################################
# Drone contains 3 pipelines:
# 1. all-tests-compare-to-master (carthagenet)
# 2. connect-to-mainnet
#################################


############################################################################################################################
# 1. all-tests-compare-to-master
# - runs 3 nodes (master, current_branch, ocaml_snapshot)
#
# - runs tests:
# -- rpc-test - compare all rpc's from FROM_BLOCK_HEADER to TO_BLOCK_HEADER between current_branch and ocaml_snapshot
# -- wrk-performance-test - compare several rpc's performances from FROM_BLOCK_HEADER to TO_BLOCK_HEADER between all nodes
# -- indexer-test - compare indexing from FROM_BLOCK_HEADER to TO_BLOCK_HEADER between current_branch and ocaml_snapshot
#
# - triggers on master and on pull request to master
############################################################################################################################
kind: pipeline
name: all-tests-compare-to-master
# default build goes with: --network "carthagenet"
# integration test is using env variables:
# - FROM_BLOCK_HEADER - block level,
# - TO_BLOCK_HEADER - block level (also is used by bootstrap task --bootstrap)
# -- all headers in interval <FROM_BLOCK_HEADER, TO_BLOCK_HEADER) are checked in test (rpc json compare)
# - OCAML_NODE_RPC_CONTEXT_ROOT: running ocaml node, e.g.: http://ocaml-node-run:8732
# - TEZEDGE_NODE_RPC_CONTEXT_ROOT: running tezedge node, e.g.: http://tezedge-node-run:18732
# the command - tezos-node-bootstrap --bootstrap in the bootstrapping step accepts min. 2 and up to 3 args. You can specify the node urls to be bootstrapped
# we want to bootstrap all 3 nodes in the master pipeline, so we pass all of them to the bootstrap app
# in special pipelines, we could omit the master node (only needed for perftest) 

environment:
  NETWORK: carthagenet
  FROM_BLOCK_HEADER: 0
  TO_BLOCK_HEADER: 5000
  SODIUM_USE_PKG_CONFIG: 1
  LD_LIBRARY_PATH: ./tezos/interop/lib_tezos/artifacts:./target/release
  TEZEDGE_NODE_MASTER_RPC_CONTEXT_ROOT: http://tezedge-master-node-run:18732
  OCAML_NODE_RPC_CONTEXT_ROOT: http://ocaml-node-run:8732
  OCAML_NODE_P2P_ADDRESS: http://ocaml-node-run:9734
  TEZEDGE_NODE_RPC_CONTEXT_ROOT: http://tezedge-node-run:18732
  OCAML_NODE_INDEXER_ROOT: http://tz-indexer-ocaml:8002
  TEZEDGE_NODE_INDEXER_ROOT: http://tz-indexer-ocaml:8002

steps:
# uncomment this step when a modification to the storage was done and requires a fresh bootstrap
- name: cleanup-node-data
  image: alpine/git
  user: root
  volumes:
    - name: tezedge-node-data
      path: /tmp/tezedge_developer
    - name: tezedge-master-node-data
      path: /tmp/tezedge_master_developer
    - name: ocaml-node-data
      path: /home/tezos/data
  commands:
    - rm -rf /tmp/tezedge_developer/light-node
    - rm -rf /tmp/tezedge_developer/tezos-node
    - rm -rf /tmp/tezedge_master_developer/light-node
    - rm -rf /tmp/tezedge_master_developer/tezos-node
    - rm -rf /home/tezos/data/context
    - rm -rf /home/tezos/data/store
    - rm -f /home/tezos/data/lock


- name: build-tezedge
  image: simplestakingcom/tezedge-ci-builder:latest
  user: root
  environment:
    SODIUM_USE_PKG_CONFIG: 1
  commands:
    - cargo build --release --workspace

- name: build-tezedge-master
  image: simplestakingcom/tezedge-ci-builder:latest
  user: root
  volumes:
    - name: cache
      path: /tmp/tezedge-cache
  commands:
    - cd /tmp/tezedge-cache
    - rm -rf tezedge
    - git clone https://github.com/simplestaking/tezedge.git && cd tezedge
    - cargo build --release --workspace

# run ocaml node with snapshoted data (to save time/resources for waiting to outside tezos world)
- name: ocaml-node-run
  user: root
  image: tezos/tezos:carthagenet
  detach: true
  volumes:
    - name: ocaml-node-data
      path: /home/tezos/data
  commands:
    - cp /drone/src/docker/identities/identity_ocaml.json /home/tezos/data/identity.json
# TODO: Ado - treba tento subor niekde fixne umiestnit a da sa stihanut tu:
#   - wget https://snaps.tulip.tools/carthagenet_2020-04-22_03:46.full
#   - tezos-node snapshot import carthagenet_2020-04-22_03:46.full --data-dir /home/tezos/data
    - tezos-node run --rpc-addr 0.0.0.0 --net-addr 0.0.0.0:9734 --data-dir /home/tezos/data --history-mode archive --no-bootstrap-peers --connections "2" --disable-testchain

- name: tezedge-master-node-run
  image: simplestakingcom/tezedge-ci-builder:latest
  pull: if-not-exists
  user: root
  detach: true
  volumes:
    - name: tezedge-master-node-data
      path: /tmp/tezedge_developer
    - name: cache
      path: /tmp/tezedge-cache
  commands: 
    - cd /tmp/tezedge-cache/tezedge
    - cargo run --release --bin light-node -- --config-file "./light_node/etc/tezedge/tezedge_drone.config" --network "$${NETWORK}" --identity-file "/drone/src/docker/identities/identity_tezedge_master.json"

- name: tezedge-node-run
  image: simplestakingcom/tezedge-ci-builder:latest
  pull: if-not-exists
  user: root
  detach: true
  volumes:
    - name: tezedge-node-data
      path: /tmp/tezedge_developer
  commands: 
    - cargo run --release --bin light-node -- --config-file "./light_node/etc/tezedge/tezedge_drone.config" --network "$${NETWORK}" --identity-file "/drone/src/docker/identities/identity_tezedge.json" --p2p-port=19732

- name: bootstrapping
  image: simplestakingcom/tezos-node-bootstrap:latest
  commands:
    - tezos-node-bootstrap --bootstrap $${TEZEDGE_NODE_MASTER_RPC_CONTEXT_ROOT} $${OCAML_NODE_RPC_CONTEXT_ROOT} $${TEZEDGE_NODE_RPC_CONTEXT_ROOT}

- name: rpc-test
  image: simplestakingcom/tezedge-ci-builder:latest
  pull: if-not-exists
  user: root
  environment:
    RUST_BACKTRACE: 1
    SODIUM_USE_PKG_CONFIG: 1
    OCAML_BUILD_CHAIN: remote
    LD_LIBRARY_PATH: ./tezos/interop/lib_tezos/artifacts
  commands:
    - cargo test --verbose --release -- --nocapture --ignored test_rpc_compare

- name: wrk-performance-test
  image: simplestakingcom/tezos-node-bootstrap:latest
  pull: always
  user: root
  commands:
    - tezos-node-bootstrap --performance-test 

- name: tz-indexer-tezedge
  image: blockwatch/tzindex:latest
  user: root
  detach: true
  volumes:
    - name: indexer-tezedge-data
      path: /data
  environment:
    TZ_RPC_HOST: tezedge-node-run
    TZ_RPC_PORT: 18732
    TZ_SERVER_ADDR: 0.0.0.0
    TZ_SERVER_PORT: 8002
    TZ_SERVER_CORS_ENABLE: true
    TZ_DATABASE_PATH: /data/index
    TZ_SNAPSHOT_PATH: /data/snapshots

- name: tz-indexer-ocaml
  image: blockwatch/tzindex:latest
  user: root
  detach: true
  volumes:
    - name: indexer-ocaml-data
      path: /data
  environment:
    TZ_RPC_HOST: ocaml-node-run
    TZ_RPC_PORT: 8732
    TZ_SERVER_ADDR: 0.0.0.0
    TZ_SERVER_PORT: 8002
    TZ_SERVER_CORS_ENABLE: true
    TZ_DATABASE_PATH: /data/index
    TZ_SNAPSHOT_PATH: /data/snapshots

- name: indexer-test
  image: simplestakingcom/tezos-node-bootstrap:latest
  commands:
    - tezos-node-bootstrap --indexer-test

volumes:
  - name: ocaml-node-data
    host:
      path: /etc/ocaml-node
  - name: tezedge-node-data
    host:
      path: /etc/tezedge-node
  - name: tezedge-master-node-data
    host:
      path: /etc/tezedge-master-node
  - name: cache
    host:
      path: /etc/tezedge-ci/cache
      
  - name: indexer-tezedge-data
    temp: {}
  - name: indexer-ocaml-data
    temp: {}

trigger:
  branch:
    - amaster

############################################################################################################################
# 2. connect-to-mainnet (just quick bootstrap a few blocks)
# - runs 2 nodes (current_branch, ocaml_live)
#
# - runs tests:
# -- rpc-test - compare all rpc's from FROM_BLOCK_HEADER to TO_BLOCK_HEADER between current_branch and ocaml
#
# - triggers on master and on pull request to master
#
# - all ports prefixed with '4'
############################################################################################################################
---
kind: pipeline
name: connect-to-mainnet
# default build goes with: --network "mainnet"
# integration test is using env variables:
# - FROM_BLOCK_HEADER - block level,
# - TO_BLOCK_HEADER - block level (also is used by bootstrap task --bootstrap)
# -- all headers in interval <FROM_BLOCK_HEADER, TO_BLOCK_HEADER) are checked in test (rpc json compare)
# - OCAML_NODE_RPC_CONTEXT_ROOT: running ocaml node, e.g.: http://ocaml-node-run:8732
# - TEZEDGE_NODE_RPC_CONTEXT_ROOT: running tezedge node, e.g.: http://tezedge-node-run:18732
# the command - tezos-node-bootstrap --bootstrap in the bootstrapping step accepts min. 2 and up to 3 args. You can specify the node urls to be bootstrapped
# we want to bootstrap all 3 nodes in the master pipeline, so we pass all of them to the bootstrap app
# in special pipelines, we could omit the master node (only needed for perftest)

environment:
  NETWORK: mainnet
  FROM_BLOCK_HEADER: 0
  TO_BLOCK_HEADER: 1
  SODIUM_USE_PKG_CONFIG: 1
  LD_LIBRARY_PATH: ./tezos/interop/lib_tezos/artifacts:./target/release
  OCAML_NODE_RPC_CONTEXT_ROOT: http://ocaml-node-run:48732
  OCAML_NODE_P2P_ADDRESS: http://ocaml-node-run:49734
  TEZEDGE_NODE_RPC_CONTEXT_ROOT: http://tezedge-node-run:48732
  DATA_DISCRIMINATOR: -connect-to-mainnet

steps:
  # uncomment this step when a modification to the storage was done and requires a fresh bootstrap
  - name: cleanup-node-data
    image: alpine/git
    user: root
    volumes:
      - name: tezedge-node$${DATA_DISCRIMINATOR}
        path: /tmp/tezedge_developer$${DATA_DISCRIMINATOR}
      - name: ocaml-node-data$${DATA_DISCRIMINATOR}
        path: /home/tezos-$${DATA_DISCRIMINATOR}/data
    commands:
      - rm -rf /tmp/tezedge_developer$${DATA_DISCRIMINATOR}/light-node
      - rm -rf /tmp/tezedge_developer$${DATA_DISCRIMINATOR}/tezos-node
      - rm -rf /home/tezos$${DATA_DISCRIMINATOR}/data/context
      - rm -rf /home/tezos$${DATA_DISCRIMINATOR}/data/store
      - rm -f /home/tezos$${DATA_DISCRIMINATOR}/data/lock


  - name: build-tezedge
    image: simplestakingcom/tezedge-ci-builder:latest
    user: root
    environment:
      SODIUM_USE_PKG_CONFIG: 1
    commands:
      - cargo build --release --workspace

  - name: ocaml-node-run
    user: root
    image: tezos/tezos:mainnet
    detach: true
    volumes:
      - name: ocaml-node-data$${DATA_DISCRIMINATOR}
        path: /home/tezos$${DATA_DISCRIMINATOR}/data
    commands:
      - cp /drone/src/docker/identities/identity_ocaml.json /home/tezos$${DATA_DISCRIMINATOR}/data/identity.json
      - tezos-node run --rpc-addr 0.0.0.0:48732 --net-addr 0.0.0.0:49734 --data-dir /home/tezos$${DATA_DISCRIMINATOR}/data --history-mode archive

  - name: tezedge-node-run
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    user: root
    detach: true
    volumes:
      - name: tezedge-node-data$${DATA_DISCRIMINATOR}
        path: /tmp/tezedge_developer$${DATA_DISCRIMINATOR}
    commands:
      - cargo run --release --bin light-node -- --config-file "./light_node/etc/tezedge/tezedge_drone.config" --network "$${NETWORK}" --tezos-data-dir "/tmp/tezedge_developer$${DATA_DISCRIMINATOR}/tezos-node" --bootstrap-db-path "/tmp/tezedge_developer$${DATA_DISCRIMINATOR}/light-node" --identity-file "/drone/src/docker/identities/identity_tezedge.json" --p2p-port=49732 --peers "$${OCAML_NODE_P2P_ADDRESS}"

  - name: bootstrapping
    image: simplestakingcom/tezos-node-bootstrap:latest
    commands:
      - tezos-node-bootstrap --bootstrap $${TEZEDGE_NODE_MASTER_RPC_CONTEXT_ROOT} $${OCAML_NODE_RPC_CONTEXT_ROOT} $${TEZEDGE_NODE_RPC_CONTEXT_ROOT}

  - name: rpc-test
    image: simplestakingcom/tezedge-ci-builder:latest
    pull: if-not-exists
    user: root
    environment:
      RUST_BACKTRACE: 1
      SODIUM_USE_PKG_CONFIG: 1
      OCAML_BUILD_CHAIN: remote
      LD_LIBRARY_PATH: ./tezos/interop/lib_tezos/artifacts
    commands:
      - cargo test --verbose --release -- --nocapture --ignored test_rpc_compare

volumes:
  - name: ocaml-node-data$${DATA_DISCRIMINATOR}
    host:
      path: /etc/ocaml-node$${DATA_DISCRIMINATOR}
  - name: tezedge-node-data$${DATA_DISCRIMINATOR}
    host:
      path: /etc/tezedge-node$${DATA_DISCRIMINATOR}

trigger:
  branch:
    - master